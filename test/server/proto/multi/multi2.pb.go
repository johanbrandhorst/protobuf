// Code generated by protoc-gen-go. DO NOT EDIT.
// source: multi/multi2.proto

package multi // import "github.com/johanbrandhorst/protobuf/test/server/proto/multi"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/johanbrandhorst/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Multi2_Color int32

const (
	Multi2_BLUE  Multi2_Color = 0
	Multi2_GREEN Multi2_Color = 1
	Multi2_RED   Multi2_Color = 2
)

var Multi2_Color_name = map[int32]string{
	0: "BLUE",
	1: "GREEN",
	2: "RED",
}
var Multi2_Color_value = map[string]int32{
	"BLUE":  0,
	"GREEN": 1,
	"RED":   2,
}

func (x Multi2_Color) String() string {
	return proto.EnumName(Multi2_Color_name, int32(x))
}
func (Multi2_Color) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_multi2_1c7684089cd2be71, []int{0, 0}
}

type Multi2 struct {
	RequiredValue        int32        `protobuf:"varint,1,opt,name=required_value,json=requiredValue" json:"required_value,omitempty"`
	Color                Multi2_Color `protobuf:"varint,2,opt,name=color,enum=multitest.Multi2_Color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Multi2) Reset()         { *m = Multi2{} }
func (m *Multi2) String() string { return proto.CompactTextString(m) }
func (*Multi2) ProtoMessage()    {}
func (*Multi2) Descriptor() ([]byte, []int) {
	return fileDescriptor_multi2_1c7684089cd2be71, []int{0}
}
func (m *Multi2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Multi2.Unmarshal(m, b)
}
func (m *Multi2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Multi2.Marshal(b, m, deterministic)
}
func (dst *Multi2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Multi2.Merge(dst, src)
}
func (m *Multi2) XXX_Size() int {
	return xxx_messageInfo_Multi2.Size(m)
}
func (m *Multi2) XXX_DiscardUnknown() {
	xxx_messageInfo_Multi2.DiscardUnknown(m)
}

var xxx_messageInfo_Multi2 proto.InternalMessageInfo

func (m *Multi2) GetRequiredValue() int32 {
	if m != nil {
		return m.RequiredValue
	}
	return 0
}

func (m *Multi2) GetColor() Multi2_Color {
	if m != nil {
		return m.Color
	}
	return Multi2_BLUE
}

func init() {
	proto.RegisterType((*Multi2)(nil), "multitest.Multi2")
	proto.RegisterEnum("multitest.Multi2_Color", Multi2_Color_name, Multi2_Color_value)
}

func init() { proto.RegisterFile("multi/multi2.proto", fileDescriptor_multi2_1c7684089cd2be71) }

var fileDescriptor_multi2_1c7684089cd2be71 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x2d, 0xcd, 0x29,
	0xc9, 0xd4, 0x07, 0x93, 0x46, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x9c, 0x60, 0x5e, 0x49,
	0x6a, 0x71, 0x89, 0x94, 0x45, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e,
	0x56, 0x7e, 0x46, 0x62, 0x5e, 0x52, 0x51, 0x62, 0x5e, 0x4a, 0x46, 0x7e, 0x51, 0x71, 0x89, 0x3e,
	0x58, 0x71, 0x52, 0x69, 0x1a, 0x84, 0xa1, 0x9f, 0x9e, 0x5f, 0x90, 0x91, 0x5a, 0x94, 0x55, 0x0c,
	0x31, 0x44, 0xa9, 0x95, 0x91, 0x8b, 0xcd, 0x17, 0x6c, 0xaa, 0x90, 0x2a, 0x17, 0x5f, 0x51, 0x6a,
	0x61, 0x69, 0x66, 0x51, 0x6a, 0x4a, 0x7c, 0x59, 0x62, 0x4e, 0x69, 0xaa, 0x04, 0xa3, 0x02, 0xa3,
	0x06, 0x6b, 0x10, 0x2f, 0x4c, 0x34, 0x0c, 0x24, 0x28, 0xa4, 0xcb, 0xc5, 0x9a, 0x9c, 0x9f, 0x93,
	0x5f, 0x24, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x67, 0x24, 0xae, 0x07, 0x77, 0x86, 0x1e, 0xc4, 0x20,
	0x3d, 0x67, 0x90, 0x74, 0x10, 0x44, 0x95, 0x92, 0x2a, 0x17, 0x2b, 0x98, 0x2f, 0xc4, 0xc1, 0xc5,
	0xe2, 0xe4, 0x13, 0xea, 0x2a, 0xc0, 0x20, 0xc4, 0xc9, 0xc5, 0xea, 0x1e, 0xe4, 0xea, 0xea, 0x27,
	0xc0, 0x28, 0xc4, 0xce, 0xc5, 0x1c, 0xe4, 0xea, 0x22, 0xc0, 0xe4, 0xd4, 0xc4, 0xf8, 0xcb, 0xc1,
	0x89, 0x68, 0x5f, 0x24, 0xeb, 0xa6, 0xa7, 0xe6, 0xe9, 0xc2, 0xbc, 0xa2, 0x0f, 0xb2, 0x1c, 0x12,
	0x36, 0x51, 0xd6, 0xc4, 0x98, 0x01, 0x56, 0x5f, 0x9c, 0x5a, 0x54, 0x96, 0x5a, 0x04, 0x0d, 0x15,
	0xb0, 0xe6, 0x24, 0x36, 0x30, 0xc7, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x63, 0xb7, 0x64, 0x66,
	0x6e, 0x01, 0x00, 0x00,
}
