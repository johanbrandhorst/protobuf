syntax = "proto3";

package test;

import "google/protobuf/empty.proto";
import "github.com/johanbrandhorst/protobuf/proto/gopherjs.proto";

option go_package = "github.com/johanbrandhorst/protobuf/test/server/proto/test";
option (gopherjs.gopherjs_package) = "github.com/johanbrandhorst/protobuf/test/client/proto/test";


message ExtraStuff {
  map<int32, string> addresses = 1;
  oneof title {
    string first_name = 2;
    int32 id_number = 3;
  }
  repeated uint32 card_numbers = 4;
}

message PingRequest {
  enum FailureType {
    NONE = 0;
    CODE = 1;
  }

  string value = 1;
  int32 response_count = 2;
  uint32 error_code_returned = 3;
  FailureType failure_type = 4;
  bool check_metadata = 5;
  bool send_headers = 6;
  bool send_trailers = 7;
  int32 message_latency_ms = 8;
}

message PingResponse {
  string Value = 1;
  int32 counter = 2;
}

service TestService {
  rpc PingEmpty(google.protobuf.Empty) returns (PingResponse) {}

  rpc Ping(PingRequest) returns (PingResponse) {}

  rpc PingError(PingRequest) returns (google.protobuf.Empty) {}

  rpc PingList(PingRequest) returns (stream PingResponse) {}

  rpc PingClientStream(stream PingRequest) returns (PingResponse) {}

  rpc PingClientStreamError(stream PingRequest) returns (PingResponse) {}

  rpc PingBidiStream(stream PingRequest) returns (stream PingResponse) {}

  rpc PingBidiStreamError(stream PingRequest) returns (stream PingResponse) {}
}
